searchState.loadedDescShard("gooty_proxy", 0, "Gooty Proxy\nConfiguration Module\nDefinitions Module\nInspection Module\nI/O Module\nOrchestration Module\nUtility Module\nConfiguration Loader\nConfiguration Schema\nConfiguration loader that handles loading and saving …\nCurrent configuration\nDirectory containing configuration files\nCheck if the configuration file exists\nBase configuration file name\nCreate a snapshot of the configuration with the current …\nReturns the argument unchanged.\nGet the current configuration\nGet a mutable reference to the current configuration\nGet the path to the configuration file\nCalls <code>U::from(self)</code>.\nList all configuration snapshots\nLoad configuration from a file\nCreate a new <code>ConfigLoader</code> with the specified directory and …\nReload configuration from disk\nReset the configuration to default values and save to disk\nRestore configuration from a snapshot\nSave the current configuration to disk\nSave configuration to a file\nUpdate the configuration and save changes to disk\nValidate the current configuration\nCreate a new <code>ConfigLoader</code> with a specified directory and …\nMain application configuration\nApplication-wide configuration settings\nHTTP client configuration\nConfiguration for proxy judge services\nProxy management configuration\nStorage and persistence configuration\nApplication-wide settings\nHow often to auto-save data (in seconds)\nWhether to create default files when they don’t exist\nDirectory where data is stored\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHTTP client settings\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProxy judge settings\nLogging level (error, warn, info, debug, trace)\nMaximum acceptable latency for proxies in milliseconds\nMinimum success rate threshold for proxies\nNumber of proxies to validate in parallel\nWhether to pretty-print TOML output\nProxy management settings\nDelay between sequential requests in milliseconds\nNumber of retry attempts for failed requests\nRequest timeout in seconds\nStorage and persistence settings\nDefault Configuration Values\nModels for Gooty Proxy\nError Types\nProxy Module\nSource Module\nDefault threshold for considering a proxy “alive” (in …\nDefault number of proxies to validate in parallel\nDefault delay between sequential requests to avoid rate …\nDefault number of retry attempts for failed requests\nDefault timeout in seconds for HTTP requests\nDefault User-Agent strings that can be rotated when making …\nDefault validation timeout (shorter than general request …\nA collection of proxy judge URLs that can be used to test …\nDefault ports for different proxy types\nDefault persistence settings\nRegex patterns for extracting proxies from text sources\nDefault proxy rotation settings\nDefault port for HTTP proxies\nDefault port for HTTPS proxies\nDefault port for SOCKS4 proxies\nDefault port for SOCKS5 proxies\nHow often to automatically save proxy data (in seconds)\nMaximum age for a proxy before requiring revalidation (in …\nPattern with optional authentication user:pass@ip:port\nBasic IP:PORT pattern\nPattern with proxy type …\nTime until a failed proxy is eligible for retesting (in …\nMaximum consecutive failures before removing proxy from …\nMinimum success rate threshold for including a proxy in …\nSource is active and being used\nFull anonymity check using judge services\nRepresents the anonymity level of a proxy.\nYour real IP is hidden but the server knows you’re using …\nSource has failed too many times and is blacklisted\nExtended verification with multiple judges and targets\nSimple connectivity test\nDetailed information for debugging purposes\nSource is temporarily disabled\nNeither your IP nor proxy usage is detectable (most …\nCritical errors that may cause application failure\nCheck failed\nComprehensive, detailed evaluation of proxies\nHTTP proxy protocol - widely supported but unencrypted\nHTTPS proxy protocol - encrypted connection to the proxy\nCheck is currently being performed\nGeneral operational messages about system state\nJudgement Mode\nLog Level\nSource is being used for the first time\nNo judgement is performed\nCheck has not yet started\nSelect based on lowest latency\nProxy Type\nBasic, fast evaluation of proxies\nRandom selection without considering performance\nSelect based on successful requests history\nRepresents the different rotation strategies for proxy …\nRound-robin selection without considering performance\nSOCKS4 proxy protocol - supports TCP connections\nSOCKS5 proxy protocol - supports TCP, UDP, and …\nRepresents the status of a proxy source\nCheck completed successfully\nCheck if proxy can access specific target\nExtremely verbose information for tracing execution\nYour real IP address is visible in headers (least …\nRepresents the state of a proxy validation check\nRepresents a verification method for proxy testing\nIssues that should be addressed but don’t prevent …\nWeighted random selection based on performance metrics\nReturns the default port for this proxy type\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to convert a string to a <code>ProxyType</code>\nConverts a string to an <code>AnonymityLevel</code>\nConverts a string to a <code>JudgementMode</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents errors returned by external APIs during …\nRepresents errors returned by external APIs during IP …\nRepresents error types that can occur during CIDR …\nResult type for CIDR operations\nErrors that can occur during configuration operations\nResult type for configuration operations\nRepresents errors that occur when connecting to a proxy.\nIndicates that creating a directory failed.\nIndicates that a configuration directory was not found.\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nIndicates that fetching proxies from a source failed.\nIndicates that a requested file could not be found.\nErrors that can occur in the filestore\nResult type for filestore operations\nIndicates that the proxy configuration is invalid.\nIndicates that the provided CIDR string does not follow …\nIndicates that the IP address portion of a CIDR string is …\nIndicates that an IP address is invalid or malformed.\nIndicates that a provided file or directory path is …\nIndicates that a port number is invalid.\nIndicates that a port number is invalid.\nIndicates that the prefix length portion of a CIDR string …\nIndicates that a proxy ID is invalid or not found in the …\nIndicates that a regular expression pattern is invalid.\nIndicates that a regular expression pattern is invalid.\nIndicates that a source ID is invalid or not found in the …\nIndicates that a URL is invalid or malformed.\nIndicates that a URL is invalid or malformed.\nIndicates that a configuration value is invalid or out of …\nRepresents general I/O errors that occur during file …\nEncapsulates an underlying I/O error from the standard …\nIndicates that there’s a mismatch between the IP version …\nRepresents errors that occur when serializing or …\nError types that can occur during proxy judgement\nEncapsulates an underlying judgment error.\nResult type for judgement operations\nErrors that can occur in the proxy manager\nResult type for proxy manager operations\nIndicates that authentication is required but was not …\nIndicates that a required configuration file was not found.\nIndicates that a required section in a configuration file …\nRepresents network-related errors during ownership lookups.\nRepresents network-related errors during IP lookups.\nIndicates that no judge URL was configured for testing …\nIndicates that requested ownership information was not …\nIndicates that requested IP information was not found.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nRepresents miscellaneous errors that don’t fit other …\nError types that can occur during ASN and organization …\nEncapsulates an underlying ownership lookup error.\nResult type for ownership operations\nRepresents errors that occur when parsing file contents.\nIndicates that the response from a source couldn’t be …\nIndicates that the response from a judge couldn’t be …\nIndicates that the response from an ownership lookup couldn…\nIndicates that the response from an IP lookup couldn’t …\nErrors that can occur when validating or working with …\nRepresents errors specific to proxy connection failures.\nEncapsulates an underlying proxy validation error.\nIndicates that a proxy check failed.\nIndicates that requests are being rate-limited by an …\nIndicates that requests are being rate-limited by an …\nEncapsulates an underlying reqwest library error.\nEncapsulates an underlying requestor error.\nResult type for HTTP requests\nError types that can occur during HTTP requests\nEncapsulates an underlying requestor error.\nIndicates that the configuration doesn’t match the …\nRepresents errors that occur when serializing data to any …\nErrors that can occur during IP lookup operations\nEncapsulates an underlying sleuth error.\nResult type for Sleuth operations\nRepresents an error that can occur when working with proxy …\nEncapsulates an underlying source error.\nResult type for source operations\nIndicates that the server responded with a non-success …\nIndicates that a request did not complete within the …\nIndicates that a proxy check operation timed out.\nRepresents errors that occur when deserializing data from …\nRepresents errors that occur when deserializing data from …\nRepresents errors that occur when serializing data to TOML …\nRepresents errors that occur when serializing data to TOML …\nError types for utility functions\nResult type for utility functions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a proxy server with its connection details and …\nWhen the proxy was added to the system.\nThe IP address of the proxy server.\nThe anonymity level of the proxy.\nThe ASN (Autonomous System Number) of the proxy, if …\nThe total number of checks performed on the proxy.\nThe number of failed checks for the proxy.\nCalculates the success rate of the proxy based on check …\nCIDR notation for the network the proxy belongs to.\nThe country associated with the proxy, if available.\nReturns the argument unchanged.\nDeserializes a proxy from a JSON string\nGets the full IP metadata if available\nThe hostname of the proxy, if available.\nCalls <code>U::from(self)</code>.\nExtended network metadata for the proxy IP address.\nWhen the proxy was last checked for availability.\nWhen the proxy was last used for a connection.\nThe latency of the proxy in milliseconds, if measured.\nOptional location information for the proxy IP address.\nOptional network information for the proxy IP address.\nCreates a new proxy with mandatory fields and default …\nThe organization associated with the proxy, if available.\nOptional organization information for the proxy IP address.\nOptional password for authentication.\nThe port number of the proxy server.\nThe type of the proxy (e.g., HTTP, HTTPS, SOCKS4, SOCKS5).\nRecords a successful check of the proxy\nRecords a failed check of the proxy\nRecords a successful use of the proxy\nRecords a failed use of the proxy\nReturns a connection string representation of the proxy\nSerializes the proxy to a JSON string\nUpdates the proxy with new information from a check\nUpdates the proxy with network metadata from a sleuth …\nNumber of times the proxy has been used for connections.\nNumber of times connections through this proxy have failed.\nCalculates the success rate of the proxy based on usage …\nOptional username for authentication.\nValidates that the proxy configuration is correct.\nSets authentication credentials for the proxy.\nSets the country for the proxy.\nSets the hostname for the proxy.\nSets the organization for the proxy.\nRepresents a source of proxy servers.\nAdds a parameter to the source configuration.\nCompiled regex object for performance\nNumber of times the source has failed\nFetches proxies from this source.\nFetches proxies and returns both the proxies and raw …\nReturns the argument unchanged.\nDeserializes a source from a JSON string.\nReturns a constructed URL with parameters.\nCalls <code>U::from(self)</code>.\nLast failure HTTP status code if applicable\nLast failure reason\nWhen the source was last used\nCreates a new proxy source with the required fields.\nAdditional parameters for the source\nParse a proxy from a string match.\nNumber of proxies found from this source\nRecords a failure when using the source.\nRecords a successful use of the source.\nThe regex pattern to use for extracting proxy information …\nRemoves a parameter from the source configuration.\nReturns the success rate of using this source.\nSerializes the source to a JSON string.\nUpdates the regex pattern and recompiles it.\nThe URL of the proxy source.\nNumber of times the source has been used\nThe User-Agent string to use when making requests to the …\nValidates the source configuration.\nCIDR Module\nIP Information Module\nJudgement Module\nLocation Module\nOwnership Module\nRepresents a CIDR (Classless Inter-Domain Routing) block.\nString representation of the CIDR\nChecks if an IP address is contained within this CIDR …\nReturns the argument unchanged.\nReturns the network address of the CIDR block.\nReturns the prefix length of the CIDR block.\nHelper functions for working with CIDR notations.\nCalls <code>U::from(self)</code>.\nBase IP address of the network\nNetwork prefix length (subnet mask bits)\nCreates a new CIDR from a string representation (e.g., “…\nReturns the string representation of the CIDR block.\nExtracts the network part of a CIDR notation.\nExtracts the prefix length from a CIDR notation.\nChecks if an IP address is within a CIDR range.\nFull IP address metadata gathered by Sleuth\nMain Sleuth struct for performing IP lookups\nASN (Autonomous System Number) specifically for the IP\nHTTP client for making API requests\nCreates a default Sleuth instance with standard …\nCreates a default <code>IpMetadata</code> instance\nReturns the argument unchanged.\nReturns the argument unchanged.\nHostname associated with the IP address, if available\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIP address being analyzed\nCheck if an IP address is within a given CIDR range\nLookup ASN information for an IP address\nLookup CIDR range for an IP address\nLookup hostname for an IP address using DNS reverse lookup\nGet comprehensive metadata about an IP address\nLookup location information for an IP address\nLookup organization information for an IP address\nTry to find parent organizations and ownership chain\nNetwork information for the IP address\nCreate a new Sleuth instance with default configuration\nOwnership lookup service for retrieving ASN and …\nCreate a new Sleuth instance with a custom HTTP client\nService for judging proxies to determine their anonymity …\nAdd a judge URL\nDetermine the anonymity level from a judge response\nReturns the argument unchanged.\nGet the current judge URLs\nCalls <code>U::from(self)</code>.\nJudge a proxy to determine its anonymity level\nURLs of proxy judge services\nCreate a new judge with default configuration\nRequestor for making HTTP requests\nRepresents the geographical location of an IP address.\nCity name\nCountry name\nSpecific facility name (e.g., data center name)\nReturns the argument unchanged.\nChecks if this location has any information\nCalls <code>U::from(self)</code>.\nCreates a new detailed Location\nPostal or ZIP code\nState, province, or region name\nGets a formatted string representation of this location\nCreates a new Location with the given country\nAdds facility name information to this location\nASN (Autonomous System Number) information\nNetwork information associated with an IP address\nRepresents the ownership information of an organization.\nService for looking up ASN and organization information\nThe ASN (Autonomous System Number) of the organization\nCIDR notation for the network (e.g., 192.168.1.0/24)\nThe country where this ASN is registered\nThe description or name of the ASN\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the ASN as a number if it exists\nCheck if this organization has a parent\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocation associated with this network\nLookup ASN information for an IP address\nLookup detailed information about an ASN\nLookup organization information for an IP address\nTry to find parent organizations and ownership chain\nThe name of the organization\nCreate a new ownership lookup service with default …\nCreate a new Organization with the given name and ASN\nThe ASN number\nOrganization that owns this network\nThe organization that owns this ASN\nThe parent organization if available\nCreate a new ownership lookup service with a custom HTTP …\nSet the parent organization\nFilesystem Module\nHTTP Module\nConfiguration for the entire application\nFile-based storage manager for proxies, sources, and …\nConfiguration settings for the filestore\nContainer for storing proxies in TOML format\nContainer for storing sources in TOML format\nHow often to auto-save data (in seconds)\nBase directory for all data files\nConfiguration for this filestore instance\nWhether to create default files when they don’t exist\nDirectory where proxy data is stored\nFilestore configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the base directory where files are stored\nGet the current filestore configuration\nCreate a file path by joining the base directory with the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad application configuration from a file\nLoad proxies from a file\nLoad sources from a file\nLogging level (error, warn, info, debug, trace)\nMaximum acceptable latency for proxies (ms)\nMinimum success rate for proxy rotation\nCreate a new filestore with default configuration\nNumber of proxies to validate in parallel\nWhether to pretty-print TOML output\nDelay between sequential requests (ms)\nNumber of retry attempts for failed requests\nRequest timeout in seconds\nSave application configuration to a file\nSave proxies to a file\nSave sources to a file\nCreate a new filestore with custom configuration\nSimple HTTP requestor with optional proxy support.\nThe HTTP client for making requests\nReturns the argument unchanged.\nMakes a GET request to the specified URL with the provided …\nMakes a GET request using a proxy.\nCalls <code>U::from(self)</code>.\nMeasures the latency to a URL in milliseconds.\nCreates a new requestor with a default timeout of 30 …\nRequest timeout duration\nCreates a new requestor with a custom timeout in seconds.\nManager Module\nProcesses Module\nThreading Module\nManager for proxy and source collections with testing and …\nStatistics about proxies managed by <code>ProxyManager</code>\nStatistics about sources managed by <code>ProxyManager</code>\nNumber of active sources\nAdd multiple proxies to the manager.\nAdd a proxy to the manager.\nAdd a source to the manager.\nAdd multiple sources to the manager.\nAverage latency of working proxies\nNumber of proxies by anonymity level\nNumber of proxies by country\nNumber of proxies by type\nCheck all proxies in parallel.\nCheck a proxy by testing its connectivity and anonymity.\nClear all proxies from the manager.\nClear all sources from the manager.\nEnrich all proxies with IP metadata in parallel.\nEnrich a proxy with IP metadata.\nFetch proxies from all active sources in parallel.\nFetch proxies from a source.\nGet all proxies that match certain criteria.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet all proxies as a vector of references.\nGet all proxies as owned values.\nGet all sources as a vector of references.\nGet all sources as owned values.\nGet the best proxies based on latency and success rate.\nGet the last update time of the manager state.\nGet a proxy by its connection string.\nGet a mutable reference to a proxy by its connection …\nGet statistics about the managed proxies.\nGet a source by its URL.\nGet a mutable reference to a source by its URL.\nGet statistics about the managed sources.\nInitialize the judge for proxy testing.\nInitialize the sleuth for IP lookups.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJudge for checking proxy anonymity\nLast time the manager state was updated\nCreate a new proxy manager with default configuration.\nCollection of proxies keyed by their string representation\nProxies found per source\nGet the total number of proxies managed.\nRemove a proxy by its connection string.\nRemove a source by its URL.\nHTTP request client for making requests\nIP lookup tool\nGet the total number of sources.\nCollection of sources keyed by their identifier\nTotal number of proxies\nTotal number of sources\nTotal proxies found from all sources\nNumber of working proxies (successfully judged)\nHelper function to create a progress bar with consistent …\nEnrich a batch of proxies with IP metadata.\nFetch proxies from multiple sources concurrently.\nVerify a batch of proxies with the judge service.\nManages a collection of task handles for concurrent …\nCancel all running tasks\nCreates a set of worker tasks with a bounded channel for …\nExecute multiple futures concurrently with a limit on …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWait for all tasks to complete\nCreate a new task manager\nRun a batch of operations concurrently with limited …\nRuns a batch of operations with progress reporting.\nProcess items concurrently with a shared state\nSpawn a new task and add it to the managed set\nA wrapper type for <code>fancy_regex::Regex</code> that implements …\nFinds all matches in the given text\nReturns the argument unchanged.\nReturns a random User-Agent string from the default list\nCalls <code>U::from(self)</code>.\nChecks if the given text matches this regex\nChecks if a string is a valid IPv4 or IPv6 address\nChecks if a number is a valid port number (1-65535)\nValidates whether a given string is a valid URL\nCreates a new <code>SerializableRegex</code> from a pattern string\nGets the underlying regex pattern\nThe pattern string used to create the regex\nGets a reference to the compiled regex\nThe compiled regex object\nSanitizes a URL to be used as part of a filename\nValidates and compiles a regex pattern")